{
    "____comment": "This file was generated with eosforce-abigen. DO NOT EDIT ",
    "version": "eosio::abi/1.1",
    "types": [],
    "structs": [
        {
            "name": "account_info",
            "base": "",
            "fields": [
                {
                    "name": "name",
                    "type": "account_name"
                },
                {
                    "name": "available",
                    "type": "asset"
                }
            ]
        },
        {
            "name": "activate",
            "base": "",
            "fields": [
                {
                    "name": "feature_digest",
                    "type": "checksum256"
                }
            ]
        },
        {
            "name": "approvebp",
            "base": "",
            "fields": [
                {
                    "name": "bpname",
                    "type": "account_name"
                },
                {
                    "name": "approver",
                    "type": "account_name"
                }
            ]
        },
        {
            "name": "assetage",
            "base": "",
            "fields": [
                {
                    "name": "staked",
                    "type": "asset"
                },
                {
                    "name": "age",
                    "type": "int64"
                },
                {
                    "name": "update_height",
                    "type": "uint32"
                }
            ]
        },
        {
            "name": "authority",
            "base": "",
            "fields": [
                {
                    "name": "threshold",
                    "type": "uint32"
                },
                {
                    "name": "keys",
                    "type": "key_weight[]"
                },
                {
                    "name": "accounts",
                    "type": "permission_level_weight[]"
                },
                {
                    "name": "waits",
                    "type": "wait_weight[]"
                }
            ]
        },
        {
            "name": "bailpunish",
            "base": "",
            "fields": [
                {
                    "name": "bpname",
                    "type": "account_name"
                }
            ]
        },
        {
            "name": "block_reward",
            "base": "",
            "fields": [
                {
                    "name": "name",
                    "type": "account_name"
                },
                {
                    "name": "last_standard_bp",
                    "type": "account_name"
                },
                {
                    "name": "reward_block_out",
                    "type": "asset"
                },
                {
                    "name": "reward_budget",
                    "type": "asset"
                },
                {
                    "name": "total_block_age",
                    "type": "uint64"
                },
                {
                    "name": "last_reward_block_num",
                    "type": "uint32"
                }
            ]
        },
        {
            "name": "bp_info",
            "base": "",
            "fields": [
                {
                    "name": "name",
                    "type": "account_name"
                },
                {
                    "name": "block_signing_key",
                    "type": "public_key"
                },
                {
                    "name": "commission_rate",
                    "type": "uint32"
                },
                {
                    "name": "total_staked",
                    "type": "int64"
                },
                {
                    "name": "rewards_pool",
                    "type": "asset"
                },
                {
                    "name": "total_voteage",
                    "type": "int64"
                },
                {
                    "name": "voteage_update_height",
                    "type": "uint32"
                },
                {
                    "name": "url",
                    "type": "string"
                },
                {
                    "name": "emergency",
                    "type": "bool"
                }
            ]
        },
        {
            "name": "bp_monitor",
            "base": "",
            "fields": [
                {
                    "name": "bpname",
                    "type": "account_name"
                },
                {
                    "name": "last_block_num",
                    "type": "uint32"
                },
                {
                    "name": "consecutive_drain_block",
                    "type": "uint32"
                },
                {
                    "name": "consecutive_produce_block",
                    "type": "uint32"
                },
                {
                    "name": "total_drain_block",
                    "type": "uint32"
                },
                {
                    "name": "stability",
                    "type": "uint32"
                },
                {
                    "name": "bock_age",
                    "type": "uint64"
                },
                {
                    "name": "bp_status",
                    "type": "uint32"
                },
                {
                    "name": "end_punish_block",
                    "type": "uint32"
                }
            ]
        },
        {
            "name": "bpclaim",
            "base": "",
            "fields": [
                {
                    "name": "bpname",
                    "type": "account_name"
                }
            ]
        },
        {
            "name": "bps_reward",
            "base": "",
            "fields": [
                {
                    "name": "bpname",
                    "type": "account_name"
                },
                {
                    "name": "reward",
                    "type": "asset"
                }
            ]
        },
        {
            "name": "canceldelay",
            "base": "",
            "fields": [
                {
                    "name": "canceling_auth",
                    "type": "permission_level"
                },
                {
                    "name": "trx_id",
                    "type": "checksum256"
                }
            ]
        },
        {
            "name": "chain_status",
            "base": "",
            "fields": [
                {
                    "name": "name",
                    "type": "account_name"
                },
                {
                    "name": "emergency",
                    "type": "bool"
                }
            ]
        },
        {
            "name": "claim",
            "base": "",
            "fields": [
                {
                    "name": "voter",
                    "type": "account_name"
                },
                {
                    "name": "bpname",
                    "type": "account_name"
                }
            ]
        },
        {
            "name": "deleteauth",
            "base": "",
            "fields": [
                {
                    "name": "account",
                    "type": "account_name"
                },
                {
                    "name": "permission",
                    "type": "name"
                }
            ]
        },
        {
            "name": "drain_block_info",
            "base": "",
            "fields": [
                {
                    "name": "current_block_num",
                    "type": "uint64"
                },
                {
                    "name": "drain_block_num",
                    "type": "uint32"
                }
            ]
        },
        {
            "name": "fix_time_vote_info",
            "base": "",
            "fields": [
                {
                    "name": "key",
                    "type": "uint64"
                },
                {
                    "name": "voter",
                    "type": "account_name"
                },
                {
                    "name": "bpname",
                    "type": "account_name"
                },
                {
                    "name": "fvote_typ",
                    "type": "name"
                },
                {
                    "name": "votepower_age",
                    "type": "assetage"
                },
                {
                    "name": "vote",
                    "type": "asset"
                },
                {
                    "name": "start_block_num",
                    "type": "uint32"
                },
                {
                    "name": "withdraw_block_num",
                    "type": "uint32"
                },
                {
                    "name": "is_withdraw",
                    "type": "bool"
                }
            ]
        },
        {
            "name": "global_votestate_info",
            "base": "",
            "fields": [
                {
                    "name": "stat_name",
                    "type": "name"
                },
                {
                    "name": "total_staked",
                    "type": "int64"
                }
            ]
        },
        {
            "name": "heartbeat",
            "base": "",
            "fields": [
                {
                    "name": "bpname",
                    "type": "account_name"
                },
                {
                    "name": "timestamp",
                    "type": "time_point_sec"
                }
            ]
        },
        {
            "name": "heartbeat_info",
            "base": "",
            "fields": [
                {
                    "name": "bpname",
                    "type": "account_name"
                },
                {
                    "name": "timestamp",
                    "type": "time_point_sec"
                }
            ]
        },
        {
            "name": "key_weight",
            "base": "",
            "fields": [
                {
                    "name": "key",
                    "type": "public_key"
                },
                {
                    "name": "weight",
                    "type": "uint16"
                }
            ]
        },
        {
            "name": "last_producer",
            "base": "",
            "fields": [
                {
                    "name": "name",
                    "type": "account_name"
                },
                {
                    "name": "next_index",
                    "type": "uint32"
                },
                {
                    "name": "max_size",
                    "type": "uint32"
                },
                {
                    "name": "producers",
                    "type": "account_name[]"
                }
            ]
        },
        {
            "name": "linkauth",
            "base": "",
            "fields": [
                {
                    "name": "account",
                    "type": "account_name"
                },
                {
                    "name": "code",
                    "type": "account_name"
                },
                {
                    "name": "type",
                    "type": "account_name"
                },
                {
                    "name": "requirement",
                    "type": "name"
                }
            ]
        },
        {
            "name": "monitorevise",
            "base": "",
            "fields": [
                {
                    "name": "bpname",
                    "type": "account_name"
                }
            ]
        },
        {
            "name": "newaccount",
            "base": "",
            "fields": [
                {
                    "name": "creator",
                    "type": "account_name"
                },
                {
                    "name": "name",
                    "type": "account_name"
                },
                {
                    "name": "owner",
                    "type": "authority"
                },
                {
                    "name": "active",
                    "type": "authority"
                }
            ]
        },
        {
            "name": "onblock",
            "base": "",
            "fields": [
                {
                    "name": "timestamp",
                    "type": "block_timestamp_type"
                },
                {
                    "name": "bpname",
                    "type": "account_name"
                },
                {
                    "name": "confirmed",
                    "type": "uint16"
                },
                {
                    "name": "previous",
                    "type": "checksum256"
                },
                {
                    "name": "transaction_mroot",
                    "type": "checksum256"
                },
                {
                    "name": "action_mroot",
                    "type": "checksum256"
                },
                {
                    "name": "schedule_version",
                    "type": "uint32"
                }
            ]
        },
        {
            "name": "onerror",
            "base": "",
            "fields": [
                {
                    "name": "sender_id",
                    "type": "uint128"
                },
                {
                    "name": "sent_trx",
                    "type": "bytes"
                }
            ]
        },
        {
            "name": "onfee",
            "base": "",
            "fields": [
                {
                    "name": "actor",
                    "type": "account_name"
                },
                {
                    "name": "fee",
                    "type": "asset"
                },
                {
                    "name": "bpname",
                    "type": "account_name"
                }
            ]
        },
        {
            "name": "outfixvote",
            "base": "",
            "fields": [
                {
                    "name": "voter",
                    "type": "account_name"
                },
                {
                    "name": "key",
                    "type": "uint64"
                }
            ]
        },
        {
            "name": "permission_level",
            "base": "",
            "fields": [
                {
                    "name": "actor",
                    "type": "name"
                },
                {
                    "name": "permission",
                    "type": "name"
                }
            ]
        },
        {
            "name": "permission_level_weight",
            "base": "",
            "fields": [
                {
                    "name": "permission",
                    "type": "permission_level"
                },
                {
                    "name": "weight",
                    "type": "uint16"
                }
            ]
        },
        {
            "name": "producer",
            "base": "",
            "fields": [
                {
                    "name": "bpname",
                    "type": "account_name"
                },
                {
                    "name": "amount",
                    "type": "uint32"
                }
            ]
        },
        {
            "name": "producer_blacklist",
            "base": "",
            "fields": [
                {
                    "name": "bpname",
                    "type": "account_name"
                },
                {
                    "name": "isactive",
                    "type": "bool"
                }
            ]
        },
        {
            "name": "punish_bp_info",
            "base": "",
            "fields": [
                {
                    "name": "punish_bp_name",
                    "type": "account_name"
                },
                {
                    "name": "proposaler",
                    "type": "account_name"
                },
                {
                    "name": "approve_bp",
                    "type": "account_name[]"
                },
                {
                    "name": "effective_block_num",
                    "type": "uint32"
                }
            ]
        },
        {
            "name": "punishbp",
            "base": "",
            "fields": [
                {
                    "name": "bpname",
                    "type": "account_name"
                },
                {
                    "name": "proposaler",
                    "type": "account_name"
                }
            ]
        },
        {
            "name": "removebp",
            "base": "",
            "fields": [
                {
                    "name": "bpname",
                    "type": "account_name"
                }
            ]
        },
        {
            "name": "removepunish",
            "base": "",
            "fields": [
                {
                    "name": "bpname",
                    "type": "account_name"
                }
            ]
        },
        {
            "name": "reqactivated",
            "base": "",
            "fields": [
                {
                    "name": "feature_digest",
                    "type": "checksum256"
                }
            ]
        },
        {
            "name": "revote",
            "base": "",
            "fields": [
                {
                    "name": "voter",
                    "type": "account_name"
                },
                {
                    "name": "frombp",
                    "type": "account_name"
                },
                {
                    "name": "tobp",
                    "type": "account_name"
                },
                {
                    "name": "restake",
                    "type": "asset"
                }
            ]
        },
        {
            "name": "revotefix",
            "base": "",
            "fields": [
                {
                    "name": "voter",
                    "type": "account_name"
                },
                {
                    "name": "key",
                    "type": "uint64"
                },
                {
                    "name": "bpname",
                    "type": "account_name"
                }
            ]
        },
        {
            "name": "schedule_info",
            "base": "",
            "fields": [
                {
                    "name": "version",
                    "type": "uint64"
                },
                {
                    "name": "block_height",
                    "type": "uint32"
                },
                {
                    "name": "producers",
                    "type": "producer[]"
                }
            ]
        },
        {
            "name": "setabi",
            "base": "",
            "fields": [
                {
                    "name": "account",
                    "type": "name"
                },
                {
                    "name": "abi",
                    "type": "bytes"
                }
            ]
        },
        {
            "name": "setcode",
            "base": "",
            "fields": [
                {
                    "name": "account",
                    "type": "name"
                },
                {
                    "name": "vmtype",
                    "type": "uint8"
                },
                {
                    "name": "vmversion",
                    "type": "uint8"
                },
                {
                    "name": "code",
                    "type": "bytes"
                }
            ]
        },
        {
            "name": "setconfig",
            "base": "",
            "fields": [
                {
                    "name": "typ",
                    "type": "account_name"
                },
                {
                    "name": "num",
                    "type": "int64"
                },
                {
                    "name": "key",
                    "type": "account_name"
                },
                {
                    "name": "fee",
                    "type": "asset"
                }
            ]
        },
        {
            "name": "setemergency",
            "base": "",
            "fields": [
                {
                    "name": "bpname",
                    "type": "account_name"
                },
                {
                    "name": "emergency",
                    "type": "bool"
                }
            ]
        },
        {
            "name": "setfee",
            "base": "",
            "fields": [
                {
                    "name": "account",
                    "type": "name"
                },
                {
                    "name": "action",
                    "type": "name"
                },
                {
                    "name": "fee",
                    "type": "asset"
                },
                {
                    "name": "cpu_limit",
                    "type": "uint32"
                },
                {
                    "name": "net_limit",
                    "type": "uint32"
                },
                {
                    "name": "ram_limit",
                    "type": "uint32"
                }
            ]
        },
        {
            "name": "transfer",
            "base": "",
            "fields": [
                {
                    "name": "from",
                    "type": "account_name"
                },
                {
                    "name": "to",
                    "type": "account_name"
                },
                {
                    "name": "quantity",
                    "type": "asset"
                },
                {
                    "name": "memo",
                    "type": "string"
                }
            ]
        },
        {
            "name": "unfreeze",
            "base": "",
            "fields": [
                {
                    "name": "voter",
                    "type": "account_name"
                },
                {
                    "name": "bpname",
                    "type": "account_name"
                }
            ]
        },
        {
            "name": "unfreezeram",
            "base": "",
            "fields": [
                {
                    "name": "voter",
                    "type": "account_name"
                },
                {
                    "name": "bpname",
                    "type": "account_name"
                }
            ]
        },
        {
            "name": "unlinkauth",
            "base": "",
            "fields": [
                {
                    "name": "account",
                    "type": "account_name"
                },
                {
                    "name": "code",
                    "type": "account_name"
                },
                {
                    "name": "type",
                    "type": "name"
                }
            ]
        },
        {
            "name": "updateauth",
            "base": "",
            "fields": [
                {
                    "name": "account",
                    "type": "name"
                },
                {
                    "name": "permission",
                    "type": "name"
                },
                {
                    "name": "parent",
                    "type": "name"
                },
                {
                    "name": "auth",
                    "type": "authority"
                }
            ]
        },
        {
            "name": "updatebp",
            "base": "",
            "fields": [
                {
                    "name": "bpname",
                    "type": "account_name"
                },
                {
                    "name": "block_signing_key",
                    "type": "public_key"
                },
                {
                    "name": "commission_rate",
                    "type": "uint32"
                },
                {
                    "name": "url",
                    "type": "string"
                }
            ]
        },
        {
            "name": "vote",
            "base": "",
            "fields": [
                {
                    "name": "voter",
                    "type": "account_name"
                },
                {
                    "name": "bpname",
                    "type": "account_name"
                },
                {
                    "name": "stake",
                    "type": "asset"
                }
            ]
        },
        {
            "name": "vote4ram",
            "base": "",
            "fields": [
                {
                    "name": "voter",
                    "type": "account_name"
                },
                {
                    "name": "bpname",
                    "type": "account_name"
                },
                {
                    "name": "stake",
                    "type": "asset"
                }
            ]
        },
        {
            "name": "vote4ram_info",
            "base": "",
            "fields": [
                {
                    "name": "voter",
                    "type": "account_name"
                },
                {
                    "name": "staked",
                    "type": "asset"
                }
            ]
        },
        {
            "name": "vote_info",
            "base": "",
            "fields": [
                {
                    "name": "bpname",
                    "type": "account_name"
                },
                {
                    "name": "voteage",
                    "type": "assetage"
                },
                {
                    "name": "unstaking",
                    "type": "asset"
                },
                {
                    "name": "unstake_height",
                    "type": "uint32"
                }
            ]
        },
        {
            "name": "voteagefee",
            "base": "",
            "fields": [
                {
                    "name": "actor",
                    "type": "account_name"
                },
                {
                    "name": "fee",
                    "type": "asset"
                },
                {
                    "name": "bpname",
                    "type": "account_name"
                }
            ]
        },
        {
            "name": "votefix",
            "base": "",
            "fields": [
                {
                    "name": "voter",
                    "type": "account_name"
                },
                {
                    "name": "bpname",
                    "type": "account_name"
                },
                {
                    "name": "type",
                    "type": "name"
                },
                {
                    "name": "stake",
                    "type": "asset"
                },
                {
                    "name": "stake_typ",
                    "type": "uint32"
                }
            ]
        },
        {
            "name": "wait_weight",
            "base": "",
            "fields": [
                {
                    "name": "wait_sec",
                    "type": "uint32"
                },
                {
                    "name": "weight",
                    "type": "uint16"
                }
            ]
        }
    ],
    "actions": [
        {
            "name": "activate",
            "type": "activate",
            "ricardian_contract": ""
        },
        {
            "name": "approvebp",
            "type": "approvebp",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Approve to punish drain block bp\nsummary: '{{approver}} approve to punish {{bpname}}.only producer can approve and when the number of approver is bigger then 16 the bp will be punished'\n---"
        },
        {
            "name": "bailpunish",
            "type": "bailpunish",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: The punished bp bail to normal\nsummary: 'When the punish is over,{{bpname}} can bail to normal'\n---"
        },
        {
            "name": "bpclaim",
            "type": "bpclaim",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: bp claim reward\nsummary: 'when bp reward and block reward was bigger then 100.0000 EOSC,the bp can use this action to claim reward'\n---"
        },
        {
            "name": "canceldelay",
            "type": "canceldelay",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Cancel Delayed Transaction\nsummary: '{{nowrap canceling_auth.actor}} cancels a delayed transaction'\nicon: /\n---\n\n{{canceling_auth.actor}} cancels the delayed transaction with id {{trx_id}}."
        },
        {
            "name": "claim",
            "type": "claim",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Claim Voter 's Reward\nsummary: '{{nowrap voter}} claim their reward by vote to {{nowrap bpname}}.'\n---"
        },
        {
            "name": "deleteauth",
            "type": "deleteauth",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Delete Account Permission\nsummary: 'Delete the {{nowrap permission}} permission of {{nowrap account}}'\nicon: /\n---\n\nDelete the {{permission}} permission of {{account}}."
        },
        {
            "name": "heartbeat",
            "type": "heartbeat",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Block Producer Heartbeat\nsummary: '{{nowrap bpname}} send heartbeat to chain by time {{nowrap timestamp}}'\n---"
        },
        {
            "name": "linkauth",
            "type": "linkauth",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Link Action to Permission\nsummary: '{{nowrap account}} sets the minimum required permission for the {{#if type}}{{nowrap type}} action of the{{/if}} {{nowrap code}} contract to {{nowrap requirement}}'\nicon: /\n---\n\n{{account}} sets the minimum required permission for the {{#if type}}{{type}} action of the{{/if}} {{code}} contract to {{requirement}}.\n\n{{#if type}}{{else}}Any links explicitly associated to specific actions of {{code}} will take precedence.{{/if}}"
        },
        {
            "name": "monitorevise",
            "type": "monitorevise",
            "ricardian_contract": ""
        },
        {
            "name": "newaccount",
            "type": "newaccount",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Create New Account\nsummary: '{{nowrap creator}} creates a new account with the name {{nowrap name}}'\n---\n\n{{creator}} creates a new account with the name {{name}} and the following permissions:\n\nowner permission with authority:\n{{to_json owner}}\n\nactive permission with authority:\n{{to_json active}}"
        },
        {
            "name": "onblock",
            "type": "onblock",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: On Block\nsummary: 'each block produced by {{nowrap bpname}} will exec a onblock action by header'\n---"
        },
        {
            "name": "onerror",
            "type": "onerror",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: On Error\nsummary: 'on error'\n---"
        },
        {
            "name": "onfee",
            "type": "onfee",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: On Fee\nsummary: 'each action by {{nowrap actor}} will cost fee by {{nowrap fee}}'\n---"
        },
        {
            "name": "outfixvote",
            "type": "outfixvote",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Take out Fix Time Vote\nsummary: 'When {{nowrap voter}} fix-time voting is timeout, {{nowrap voter}} can take out stake form {{nowrap key}} voting'\n---"
        },
        {
            "name": "punishbp",
            "type": "punishbp",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Proposed to punish drain block bp\nsummary: '{{proposaler}} proposed to punish {{bpname}}'\n---"
        },
        {
            "name": "removebp",
            "type": "removebp",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Remove Block Producer\nsummary: 'unreg the {{nowrap bpname}} block producer'\n---"
        },
        {
            "name": "removepunish",
            "type": "removepunish",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: bp remove to be punish status\nsummary: 'when bp block out ,it can remove its bpstatus from 1 to 0.if the bpstatus is 1 ,the bp can be punished'\n---"
        },
        {
            "name": "reqactivated",
            "type": "reqactivated",
            "ricardian_contract": ""
        },
        {
            "name": "revote",
            "type": "revote",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: ReVote To Another Block Producer\nsummary: '{{nowrap voter}} change vote from {{nowrap frombp}} to {{nowrap tobp}} with {{nowrap restake}} asset'\n---\n\n{{voter}} change vote from {{frombp}} to {{tobp}} with {{restake}} asset,\n\nIf {{voter}} have not vote to {{tobp}}, {{voter}} will be as the RAM payer of the {{vote_info}}."
        },
        {
            "name": "revotefix",
            "type": "revotefix",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Fix Time Revote\nsummary: '{{nowrap voter}} revote {{nowrap key}} fix-time voting to {{nowrap bpname}}'\n---"
        },
        {
            "name": "setabi",
            "type": "setabi",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Deploy Contract ABI\nsummary: 'Deploy contract ABI on account {{nowrap account}}'\nicon: /\n---\n\nDeploy the ABI file associated with the contract on account {{account}}."
        },
        {
            "name": "setcode",
            "type": "setcode",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Deploy Contract Code\nsummary: 'Deploy contract code on account {{nowrap account}}'\nicon: /\n---\n\nDeploy compiled contract code to the account {{account}}."
        },
        {
            "name": "setconfig",
            "type": "setconfig",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Set Chain Config\nsummary: 'Set {{nowrap typ}} chain config by {{nowrap num}}, {{nowrap key}} and {{nowrap fee}}'\n---"
        },
        {
            "name": "setemergency",
            "type": "setemergency",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Set Emergency State\nsummary: '{{nowrap bpname}} set if current state is {{nowrap emergency}}'\n---"
        },
        {
            "name": "setfee",
            "type": "setfee",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Set Action Fee\nsummary: '{{account}} Set {{nowrap action}} in {{account}} 's contracts Fee {{nowrap fee}}'\n---"
        },
        {
            "name": "transfer",
            "type": "transfer",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Transfer EOS Token\nsummary: 'Send {{nowrap quantity}} EOS Token from {{nowrap from}} to {{nowrap to}}'\n---\n\n{{from}} agrees to send {{quantity}} to {{to}}.\n\n{{#if memo}}There is a memo attached to the transfer stating:\n{{memo}}\n{{/if}}\n\nIf {{from}} is not already the RAM payer of their {{asset_to_symbol_code quantity}} token balance, {{from}} will be designated as such. As a result, RAM will be deducted from {{from}}’s resources to refund the original RAM payer.\n\nIf {{to}} does not have a balance for {{asset_to_symbol_code quantity}}, {{from}} will be designated as the RAM payer of the {{asset_to_symbol_code quantity}} token balance for {{to}}. As a result, RAM will be deducted from {{from}}’s resources to create the necessary records."
        },
        {
            "name": "unfreeze",
            "type": "unfreeze",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Unfreeze Voter's Stake Token\nsummary: '{{nowrap voter}} unfree their stake tokens from {{nowrap bpname}}.'\n---\n\n{{voter}} unfree their stake tokens from {{nowrap bpname}} to it's account."
        },
        {
            "name": "unfreezeram",
            "type": "unfreezeram",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Unfreeze Voter's Stake Token For RAM\nsummary: '{{nowrap voter}} unfree their stake tokens from {{nowrap bpname}} for RAM.'\n---"
        },
        {
            "name": "unlinkauth",
            "type": "unlinkauth",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Unlink Action from Permission\nsummary: '{{nowrap account}} unsets the minimum required permission for the {{#if type}}{{nowrap type}} action of the{{/if}} {{nowrap code}} contract'\nicon: /\n---\n\n{{account}} removes the association between the {{#if type}}{{type}} action of the{{/if}} {{code}} contract and its minimum required permission.\n\n{{#if type}}{{else}}This will not remove any links explicitly associated to specific actions of {{code}}.{{/if}}"
        },
        {
            "name": "updateauth",
            "type": "updateauth",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Modify Account Permission\nsummary: 'Add or update the {{nowrap permission}} permission of {{nowrap account}}'\nicon: /\n---\n\nModify, and create if necessary, the {{permission}} permission of {{account}} to have a parent permission of {{parent}} and the following authority:\n{{to_json auth}}"
        },
        {
            "name": "updatebp",
            "type": "updatebp",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Update Block Producer Info\nsummary: '{{nowrap bpname}} reg or update their block producer info'\n---\n\nIf {{bpname}} is not a block producer, {{bpname}} will reg to a block producer for eosforce mainnet, and {{bpname}} will be as the RAM payer of the {{bp_info}}.\n\nIf {{bpname}} is a block producer, {{bpname}} update their block producer info with {{block_signing_key}}, {{commission_rate}} and {{url}}."
        },
        {
            "name": "vote",
            "type": "vote",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Vote To Block Producer\nsummary: '{{nowrap voter}} vote to {{nowrap bpname}} by {{nowrap stake}}'\n---\n\n{{voter}} vote to {{bpname}} by {{stake}}, {{bpname}} is a block producer.\n\nIf {{voter}} have not vote to {{bpname}}, {{voter}} will be as the RAM payer of the {{vote_info}}."
        },
        {
            "name": "vote4ram",
            "type": "vote4ram",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Vote Block Producer For RAM\nsummary: '{{nowrap voter}} vote {{nowrap bpname}} by {{nowrap stake}} asset for use reward to get RAM.'\n---\n\n{{voter}} vote {{bpname}} by {{stake}} asset for use reward to get RAM."
        },
        {
            "name": "voteagefee",
            "type": "voteagefee",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Fee By Voteage\nsummary: 'each action by {{nowrap actor}} will cost fee by use vote age to {{nowrap fee}}'\n---"
        },
        {
            "name": "votefix",
            "type": "votefix",
            "ricardian_contract": "---\nspec_version: \"0.2.0\"\ntitle: Fix Time Vote\nsummary: '{{nowrap voter}} vote {{nowrap bpname}} by fix-time in {{nowrap type}} way with {{nowrap stake}} token'\n---"
        }
    ],
    "tables": [
        {
            "name": "accounts",
            "type": "account_info",
            "index_type": "i64",
            "key_names": [],
            "key_types": []
        },
        {
            "name": "blackpro",
            "type": "producer_blacklist",
            "index_type": "i64",
            "key_names": [],
            "key_types": []
        },
        {
            "name": "blockreward",
            "type": "block_reward",
            "index_type": "i64",
            "key_names": [],
            "key_types": []
        },
        {
            "name": "bpmonitor",
            "type": "bp_monitor",
            "index_type": "i64",
            "key_names": [],
            "key_types": []
        },
        {
            "name": "bps",
            "type": "bp_info",
            "index_type": "i64",
            "key_names": [],
            "key_types": []
        },
        {
            "name": "bpsreward",
            "type": "bps_reward",
            "index_type": "i64",
            "key_names": [],
            "key_types": []
        },
        {
            "name": "chainstatus",
            "type": "chain_status",
            "index_type": "i64",
            "key_names": [],
            "key_types": []
        },
        {
            "name": "drainblocks",
            "type": "drain_block_info",
            "index_type": "i64",
            "key_names": [],
            "key_types": []
        },
        {
            "name": "fixvotes",
            "type": "fix_time_vote_info",
            "index_type": "i64",
            "key_names": [],
            "key_types": []
        },
        {
            "name": "gvotestat",
            "type": "global_votestate_info",
            "index_type": "i64",
            "key_names": [],
            "key_types": []
        },
        {
            "name": "heartbeat",
            "type": "heartbeat_info",
            "index_type": "i64",
            "key_names": [],
            "key_types": []
        },
        {
            "name": "lastproducer",
            "type": "last_producer",
            "index_type": "i64",
            "key_names": [],
            "key_types": []
        },
        {
            "name": "punishbps",
            "type": "punish_bp_info",
            "index_type": "i64",
            "key_names": [],
            "key_types": []
        },
        {
            "name": "schedules",
            "type": "schedule_info",
            "index_type": "i64",
            "key_names": [],
            "key_types": []
        },
        {
            "name": "vote4ramsum",
            "type": "vote4ram_info",
            "index_type": "i64",
            "key_names": [],
            "key_types": []
        },
        {
            "name": "votes",
            "type": "vote_info",
            "index_type": "i64",
            "key_names": [],
            "key_types": []
        },
        {
            "name": "votes4ram",
            "type": "vote_info",
            "index_type": "i64",
            "key_names": [],
            "key_types": []
        }
    ],
    "ricardian_clauses": [
        {
            "id": "UserAgreement",
            "body": "User agreement for the chain can go here."
        },
        {
            "id": "BlockProducerAgreement",
            "body": "I, {{producer}}, hereby nominate myself for consideration as an elected block producer.\n\nIf {{producer}} is selected to produce blocks by the system contract, I will sign blocks with {{producer_key}} and I hereby attest that I will keep this key secret and secure.\n\nIf {{producer}} is unable to perform obligations under this contract I will resign my position by resubmitting this contract with the null producer key.\n\nI acknowledge that a block is 'objectively valid' if it conforms to the deterministic blockchain rules in force at the time of its creation, and is 'objectively invalid' if it fails to conform to those rules.\n\n{{producer}} hereby agrees to only use {{producer_key}} to sign messages under the following scenarios:\n\n* proposing an objectively valid block at the time appointed by the block scheduling algorithm;\n* pre-confirming a block produced by another producer in the schedule when I find said block objectively valid;\n* and, confirming a block for which {{producer}} has received pre-confirmation messages from more than two-thirds of the active block producers.\n\nI hereby accept liability for any and all provable damages that result from my:\n\n* signing two different block proposals with the same timestamp with {{producer_key}};\n* signing two different block proposals with the same block number with {{producer_key}};\n* signing any block proposal which builds off of an objectively invalid block;\n* signing a pre-confirmation for an objectively invalid block;\n* or, signing a confirmation for a block for which I do not possess pre-confirmation messages from more than two-thirds of the active block producers.\n\nI hereby agree that double-signing for a timestamp or block number in concert with two or more other block producers shall automatically be deemed malicious and cause {{producer}} to be subject to:\n\n* a fine equal to the past year of compensation received,\n* immediate disqualification from being a producer,\n* and/or other damages.\n\nAn exception may be made if {{producer}} can demonstrate that the double-signing occurred due to a bug in the reference software; the burden of proof is on {{producer}}.\n\nI hereby agree not to interfere with the producer election process. I agree to process all producer election transactions that occur in blocks I create, to sign all objectively valid blocks I create that contain election transactions, and to sign all pre-confirmations and confirmations necessary to facilitate transfer of control to the next set of producers as determined by the system contract.\n\nI hereby acknowledge that more than two-thirds of the active block producers may vote to disqualify {{producer}} in the event {{producer}} is unable to produce blocks or is unable to be reached, according to criteria agreed to among block producers.\n\nIf {{producer}} qualifies for and chooses to collect compensation due to votes received, {{producer}} will provide a public endpoint allowing at least 100 peers to maintain synchronization with the blockchain and/or submit transactions to be included. {{producer}} shall maintain at least one validating node with full state and signature checking and shall report any objectively invalid blocks produced by the active block producers. Reporting shall be via a method to be agreed to among block producers, said method and reports to be made public.\n\nThe community agrees to allow {{producer}} to authenticate peers as necessary to prevent abuse and denial of service attacks; however, {{producer}} agrees not to discriminate against non-abusive peers.\n\nI agree to process transactions on a FIFO (first in, first out) best-effort basis and to honestly bill transactions for measured execution time.\n\nI {{producer}} agree not to manipulate the contents of blocks in order to derive profit from: the order in which transactions are included, or the hash of the block that is produced.\n\nI, {{producer}}, hereby agree to disclose and attest under penalty of perjury all ultimate beneficial owners of my business entity who own more than 10% and all direct shareholders.\n\nI, {{producer}}, hereby agree to cooperate with other block producers to carry out our respective and mutual obligations under this agreement, including but not limited to maintaining network stability and a valid blockchain.\n\nI, {{producer}}, agree to maintain a website hosted at {{url}} which contains up-to-date information on all disclosures required by this contract.\n\nI, {{producer}}, agree to set the location value of {{location}} such that {{producer}} is scheduled with minimal latency between my previous and next peer.\n\nI, {{producer}}, agree to maintain time synchronization within 50 ms of global atomic clock time, using a method agreed to among block producers.\n\nI, {{producer}}, agree not to produce blocks before my scheduled time unless I have received all blocks produced by the prior block producer.\n\nI, {{producer}}, agree not to publish blocks with timestamps more than 2000ms in the future unless the prior block is more than 75% full by either NET or CPU bandwidth metrics.\n\nI, {{producer}}, agree not to set the RAM supply to more RAM than my nodes contain and to resign if I am unable to provide the RAM approved by more than two-thirds of active block producers, as shown in the system parameters."
        }
    ],
    "variants": []
}